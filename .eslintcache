[{"C:\\Users\\aatuo\\microblog\\src\\index.js":"1","C:\\Users\\aatuo\\microblog\\src\\App.js":"2","C:\\Users\\aatuo\\microblog\\src\\components\\create-post.component.js":"3","C:\\Users\\aatuo\\microblog\\src\\components\\navbar.component.js":"4","C:\\Users\\aatuo\\microblog\\src\\components\\post-forum.component.js":"5","C:\\Users\\aatuo\\microblog\\src\\components\\create-user.component.js":"6","C:\\Users\\aatuo\\microblog\\src\\components\\post-page.component.js":"7"},{"size":218,"mtime":1608389038287,"results":"8","hashOfConfig":"9"},{"size":1001,"mtime":1608389549289,"results":"10","hashOfConfig":"9"},{"size":6706,"mtime":1608393173995,"results":"11","hashOfConfig":"9"},{"size":937,"mtime":1608390239749,"results":"12","hashOfConfig":"9"},{"size":488,"mtime":1608395012262,"results":"13","hashOfConfig":"9"},{"size":4339,"mtime":1608479199170,"results":"14","hashOfConfig":"9"},{"size":3504,"mtime":1608479171402,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"sr5t5",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\Users\\aatuo\\microblog\\src\\index.js",[],["33","34"],"C:\\Users\\aatuo\\microblog\\src\\App.js",[],"C:\\Users\\aatuo\\microblog\\src\\components\\create-post.component.js",[],["35","36"],"C:\\Users\\aatuo\\microblog\\src\\components\\navbar.component.js",[],"C:\\Users\\aatuo\\microblog\\src\\components\\post-forum.component.js",[],"C:\\Users\\aatuo\\microblog\\src\\components\\create-user.component.js",[],"C:\\Users\\aatuo\\microblog\\src\\components\\post-page.component.js",["37"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n// Options for date foramtting\r\nconst DATE_OPTIONS = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric' };\r\n\r\n// Functional React component for single posts which appear to the post forum\r\nconst Posti = props => (\r\n    <div>\r\n        <strong>{props.post.username} says:</strong>\r\n        <p>{props.post.content}</p>\r\n        <p>({(new Date(props.post.createdAt)).toLocaleDateString(undefined, DATE_OPTIONS)})</p>\r\n    </div>\r\n)\r\n\r\n\r\n\r\n// React class component\r\nexport default class PostPage extends Component {\r\n    // Constructor for react component\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Binding \"this\" for each method so \"this\" will refer to the class\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n\r\n\r\n        //Initial state\r\n        this.state = {\r\n            username: '',\r\n            postList: []\r\n        };\r\n    }\r\n\r\n\r\n   // Sets state when username is changed\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    // React lifecycle method which is called right before anything is displayed on the page\r\n    // Send http get request tot he backend and gets all posts from the database and puts them to the postList\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/posts/')\r\n            .then(response => {\r\n                this.setState({ postList: response.data })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n\r\n    // Maps certain elements from the array if the given username matches with the username from the list\r\n    postiLista() {\r\n        return this.state.postList.map(currentPost => {\r\n            if (currentPost.username === this.state.username) {\r\n                return <Posti post={currentPost} key={currentPost._id} />;\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    // Handles the submit event\r\n    onSubmit(e) {\r\n        e.preventDefault(); // prevents default html submit behaviour\r\n\r\n        // Sends http post request to the backend to get all posts\r\n        axios.post('http://localhost:5000/posts/')\r\n            .then(response => {\r\n                this.setState({ postList: response.data })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n\r\n    }\r\n\r\n    // What renders to the page is shown here\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h4>Here you can search posts from individual users.</h4>\r\n\r\n                <div className=\"jumbotron\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>\r\n                                <strong>Username: </strong>\r\n                            </label>\r\n                            <input type=\"text\"\r\n                                required\r\n                                className=\"form-control\"\r\n                                value={this.state.username}\r\n                                onChange={this.onChangeUsername}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <p> {this.postiLista()}</p>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"42"},{"ruleId":"40","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":59,"column":52,"nodeType":"46","messageId":"47","endLine":59,"endColumn":54},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],["48"],["49"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]